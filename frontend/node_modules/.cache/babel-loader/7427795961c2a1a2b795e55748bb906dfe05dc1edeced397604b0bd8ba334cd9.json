{"ast":null,"code":"var _jsxFileName = \"C:\\\\todolist\\\\todo-app\\\\frontend\\\\src\\\\components\\\\TaskForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createTask, updateTask } from \"../redux/taskSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskForm = ({\n  selectedTask,\n  setSelectedTask\n}) => {\n  _s();\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (selectedTask) {\n      setTitle(selectedTask.title);\n      setDescription(selectedTask.description || \"\");\n    }\n  }, [selectedTask]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (selectedTask) {\n      dispatch(updateTask({\n        id: selectedTask.id,\n        updatedTask: {\n          title,\n          description\n        }\n      }));\n      setSelectedTask(null);\n    } else {\n      dispatch(createTask({\n        title,\n        description\n      }));\n    }\n    setTitle(\"\");\n    setDescription(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"w-full max-w-2xl bg-white shadow-md rounded-lg p-6 mb-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-semibold text-blue-500 mb-4\",\n      children: selectedTask ? \"Edit Task\" : \"Add New Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block text-gray-700 font-medium mb-2\",\n        htmlFor: \"title\",\n        children: \"Task Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"title\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        placeholder: \"Enter task title\",\n        className: \"w-full border rounded-lg px-3 py-2 focus:outline-none focus:ring focus:ring-blue-300\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block text-gray-700 font-medium mb-2\",\n        htmlFor: \"description\",\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"description\",\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        placeholder: \"Enter task description\",\n        className: \"w-full border rounded-lg px-3 py-2 focus:outline-none focus:ring focus:ring-blue-300\",\n        rows: \"3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"bg-blue-500 text-white px-4 py-2 rounded-lg hover:bg-blue-600 transition duration-300\",\n      children: selectedTask ? \"Update Task\" : \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskForm, \"vvE580yLjJg0Ycg9aFBj9VYmyQI=\", false, function () {\n  return [useDispatch];\n});\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","createTask","updateTask","jsxDEV","_jsxDEV","TaskForm","selectedTask","setSelectedTask","_s","title","setTitle","description","setDescription","dispatch","handleSubmit","e","preventDefault","id","updatedTask","onSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","value","onChange","target","placeholder","rows","_c","$RefreshReg$"],"sources":["C:/todolist/todo-app/frontend/src/components/TaskForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { createTask, updateTask } from \"../redux/taskSlice\";\r\n\r\nconst TaskForm = ({ selectedTask, setSelectedTask }) => {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (selectedTask) {\r\n      setTitle(selectedTask.title);\r\n      setDescription(selectedTask.description || \"\");\r\n    }\r\n  }, [selectedTask]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (selectedTask) {\r\n      dispatch(updateTask({ id: selectedTask.id, updatedTask: { title, description } }));\r\n      setSelectedTask(null);\r\n    } else {\r\n      dispatch(createTask({ title, description }));\r\n    }\r\n    setTitle(\"\");\r\n    setDescription(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"w-full max-w-2xl bg-white shadow-md rounded-lg p-6 mb-6\">\r\n      <h2 className=\"text-2xl font-semibold text-blue-500 mb-4\">{selectedTask ? \"Edit Task\" : \"Add New Task\"}</h2>\r\n      <div className=\"mb-4\">\r\n        <label className=\"block text-gray-700 font-medium mb-2\" htmlFor=\"title\">Task Title</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"title\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n          placeholder=\"Enter task title\"\r\n          className=\"w-full border rounded-lg px-3 py-2 focus:outline-none focus:ring focus:ring-blue-300\"\r\n        />\r\n      </div>\r\n      <div className=\"mb-4\">\r\n        <label className=\"block text-gray-700 font-medium mb-2\" htmlFor=\"description\">Description</label>\r\n        <textarea\r\n          id=\"description\"\r\n          value={description}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n          placeholder=\"Enter task description\"\r\n          className=\"w-full border rounded-lg px-3 py-2 focus:outline-none focus:ring focus:ring-blue-300\"\r\n          rows=\"3\"\r\n        ></textarea>\r\n      </div>\r\n      <button type=\"submit\" className=\"bg-blue-500 text-white px-4 py-2 rounded-lg hover:bg-blue-600 transition duration-300\">\r\n        {selectedTask ? \"Update Task\" : \"Add Task\"}\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TaskForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}