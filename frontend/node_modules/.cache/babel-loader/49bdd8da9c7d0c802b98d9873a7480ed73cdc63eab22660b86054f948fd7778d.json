{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport instance from \"../axiosConfig\";\n\n// Thunk to fetch tasks from the backend\nexport const fetchTasks = createAsyncThunk(\"tasks/fetchTasks\", async () => {\n  const response = await instance.get(\"/tasks\");\n  return response.data;\n});\n\n// Thunk to create a new task\nexport const createTask = createAsyncThunk(\"tasks/createTask\", async task => {\n  const response = await instance.post(\"/tasks\", task);\n  return response.data;\n});\n\n// Thunk to toggle task completion\nexport const toggleTask = createAsyncThunk(\"tasks/toggleTask\", async taskId => {\n  const response = await instance.put(`/tasks/${taskId}/toggle`);\n  return response.data;\n});\n\n// Thunk to delete a task\nexport const deleteTask = createAsyncThunk(\"tasks/deleteTask\", async taskId => {\n  await instance.delete(`/tasks/${taskId}`);\n  return taskId;\n});\nexport const editTask = createAsyncThunk(\"tasks/editTask\", async ({\n  id,\n  updatedTask\n}) => {\n  const response = await instance.put(`/tasks/${id}`, updatedTask);\n  return response.data;\n});\n\n// Slice definition\nconst taskSlice = createSlice({\n  name: \"tasks\",\n  initialState: [],\n  reducers: {},\n  extraReducers: builder => {\n    builder\n    // Fetch tasks\n    .addCase(fetchTasks.fulfilled, (state, action) => action.payload)\n    // Create task\n    .addCase(createTask.fulfilled, (state, action) => {\n      state.push(action.payload);\n    })\n    // Toggle task\n    .addCase(toggleTask.fulfilled, (state, action) => {\n      const index = state.findIndex(task => task.id === action.payload.id);\n      if (index !== -1) {\n        state[index] = action.payload;\n      }\n    })\n    // Delete task\n    .addCase(deleteTask.fulfilled, (state, action) => {\n      return state.filter(task => task.id !== action.payload);\n    });\n  }\n});\nexport default taskSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","instance","fetchTasks","response","get","data","createTask","task","post","toggleTask","taskId","put","deleteTask","delete","editTask","id","updatedTask","taskSlice","name","initialState","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload","push","index","findIndex","filter","reducer"],"sources":["C:/todolist/todo-app/frontend/src/redux/taskSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport instance from \"../axiosConfig\";\r\n\r\n// Thunk to fetch tasks from the backend\r\nexport const fetchTasks = createAsyncThunk(\"tasks/fetchTasks\", async () => {\r\n  const response = await instance.get(\"/tasks\");\r\n  return response.data;\r\n});\r\n\r\n// Thunk to create a new task\r\nexport const createTask = createAsyncThunk(\"tasks/createTask\", async (task) => {\r\n  const response = await instance.post(\"/tasks\", task);\r\n  return response.data;\r\n});\r\n\r\n// Thunk to toggle task completion\r\nexport const toggleTask = createAsyncThunk(\"tasks/toggleTask\", async (taskId) => {\r\n  const response = await instance.put(`/tasks/${taskId}/toggle`);\r\n  return response.data;\r\n});\r\n\r\n// Thunk to delete a task\r\nexport const deleteTask = createAsyncThunk(\"tasks/deleteTask\", async (taskId) => {\r\n  await instance.delete(`/tasks/${taskId}`);\r\n  return taskId;\r\n});\r\n\r\nexport const editTask = createAsyncThunk(\"tasks/editTask\", async ({ id, updatedTask }) => {\r\n  const response = await instance.put(`/tasks/${id}`, updatedTask);\r\n  return response.data;\r\n});\r\n\r\n// Slice definition\r\nconst taskSlice = createSlice({\r\n  name: \"tasks\",\r\n  initialState: [],\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      // Fetch tasks\r\n      .addCase(fetchTasks.fulfilled, (state, action) => action.payload)\r\n      // Create task\r\n      .addCase(createTask.fulfilled, (state, action) => {\r\n        state.push(action.payload);\r\n      })\r\n      // Toggle task\r\n      .addCase(toggleTask.fulfilled, (state, action) => {\r\n        const index = state.findIndex((task) => task.id === action.payload.id);\r\n        if (index !== -1) {\r\n          state[index] = action.payload;\r\n        }\r\n      })\r\n      // Delete task\r\n      .addCase(deleteTask.fulfilled, (state, action) => {\r\n        return state.filter((task) => task.id !== action.payload);\r\n      });\r\n  },\r\n});\r\n\r\nexport default taskSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,QAAQ,MAAM,gBAAgB;;AAErC;AACA,OAAO,MAAMC,UAAU,GAAGF,gBAAgB,CAAC,kBAAkB,EAAE,YAAY;EACzE,MAAMG,QAAQ,GAAG,MAAMF,QAAQ,CAACG,GAAG,CAAC,QAAQ,CAAC;EAC7C,OAAOD,QAAQ,CAACE,IAAI;AACtB,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,UAAU,GAAGN,gBAAgB,CAAC,kBAAkB,EAAE,MAAOO,IAAI,IAAK;EAC7E,MAAMJ,QAAQ,GAAG,MAAMF,QAAQ,CAACO,IAAI,CAAC,QAAQ,EAAED,IAAI,CAAC;EACpD,OAAOJ,QAAQ,CAACE,IAAI;AACtB,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMI,UAAU,GAAGT,gBAAgB,CAAC,kBAAkB,EAAE,MAAOU,MAAM,IAAK;EAC/E,MAAMP,QAAQ,GAAG,MAAMF,QAAQ,CAACU,GAAG,CAAC,UAAUD,MAAM,SAAS,CAAC;EAC9D,OAAOP,QAAQ,CAACE,IAAI;AACtB,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMO,UAAU,GAAGZ,gBAAgB,CAAC,kBAAkB,EAAE,MAAOU,MAAM,IAAK;EAC/E,MAAMT,QAAQ,CAACY,MAAM,CAAC,UAAUH,MAAM,EAAE,CAAC;EACzC,OAAOA,MAAM;AACf,CAAC,CAAC;AAEF,OAAO,MAAMI,QAAQ,GAAGd,gBAAgB,CAAC,gBAAgB,EAAE,OAAO;EAAEe,EAAE;EAAEC;AAAY,CAAC,KAAK;EACxF,MAAMb,QAAQ,GAAG,MAAMF,QAAQ,CAACU,GAAG,CAAC,UAAUI,EAAE,EAAE,EAAEC,WAAW,CAAC;EAChE,OAAOb,QAAQ,CAACE,IAAI;AACtB,CAAC,CAAC;;AAEF;AACA,MAAMY,SAAS,GAAGlB,WAAW,CAAC;EAC5BmB,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE,EAAE;EAChBC,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA;IACE;IAAA,CACCC,OAAO,CAACrB,UAAU,CAACsB,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAKA,MAAM,CAACC,OAAO;IAChE;IAAA,CACCJ,OAAO,CAACjB,UAAU,CAACkB,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAChDD,KAAK,CAACG,IAAI,CAACF,MAAM,CAACC,OAAO,CAAC;IAC5B,CAAC;IACD;IAAA,CACCJ,OAAO,CAACd,UAAU,CAACe,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAChD,MAAMG,KAAK,GAAGJ,KAAK,CAACK,SAAS,CAAEvB,IAAI,IAAKA,IAAI,CAACQ,EAAE,KAAKW,MAAM,CAACC,OAAO,CAACZ,EAAE,CAAC;MACtE,IAAIc,KAAK,KAAK,CAAC,CAAC,EAAE;QAChBJ,KAAK,CAACI,KAAK,CAAC,GAAGH,MAAM,CAACC,OAAO;MAC/B;IACF,CAAC;IACD;IAAA,CACCJ,OAAO,CAACX,UAAU,CAACY,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAChD,OAAOD,KAAK,CAACM,MAAM,CAAExB,IAAI,IAAKA,IAAI,CAACQ,EAAE,KAAKW,MAAM,CAACC,OAAO,CAAC;IAC3D,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAeV,SAAS,CAACe,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}