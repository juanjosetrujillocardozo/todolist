{"ast":null,"code":"var _jsxFileName = \"C:\\\\todolist\\\\todo-app\\\\frontend\\\\src\\\\components\\\\TaskForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { createTask } from '../redux/taskSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskForm = () => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const dispatch = useDispatch();\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (title.trim() && description.trim()) {\n      dispatch(createTask({\n        title,\n        description\n      }));\n      setTitle('');\n      setDescription('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"flex flex-col mb-4 gap-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      placeholder: \"Task Title\",\n      className: \"border rounded px-2 py-1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: description,\n      onChange: e => setDescription(e.target.value),\n      placeholder: \"Task Description\",\n      className: \"border rounded px-2 py-1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"bg-blue-500 text-white px-3 py-1 rounded hover:bg-blue-600\",\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskForm, \"gm9LX/CXXOunIhw4ITmdfGnACkU=\", false, function () {\n  return [useDispatch];\n});\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","useDispatch","createTask","jsxDEV","_jsxDEV","TaskForm","_s","title","setTitle","description","setDescription","dispatch","handleSubmit","e","preventDefault","trim","onSubmit","className","children","type","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/todolist/todo-app/frontend/src/components/TaskForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { createTask } from '../redux/taskSlice';\r\n\r\nconst TaskForm = () => {\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (title.trim() && description.trim()) {\r\n      dispatch(createTask({ title, description }));\r\n      setTitle('');\r\n      setDescription('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"flex flex-col mb-4 gap-3\">\r\n      <input\r\n        type=\"text\"\r\n        value={title}\r\n        onChange={(e) => setTitle(e.target.value)}\r\n        placeholder=\"Task Title\"\r\n        className=\"border rounded px-2 py-1\"\r\n      />\r\n      <textarea\r\n        value={description}\r\n        onChange={(e) => setDescription(e.target.value)}\r\n        placeholder=\"Task Description\"\r\n        className=\"border rounded px-2 py-1\"\r\n      ></textarea>\r\n      <button\r\n        type=\"submit\"\r\n        className=\"bg-blue-500 text-white px-3 py-1 rounded hover:bg-blue-600\"\r\n      >\r\n        Add Task\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TaskForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,UAAU,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAMW,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE9B,MAAMW,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAIP,KAAK,CAACQ,IAAI,CAAC,CAAC,IAAIN,WAAW,CAACM,IAAI,CAAC,CAAC,EAAE;MACtCJ,QAAQ,CAACT,UAAU,CAAC;QAAEK,KAAK;QAAEE;MAAY,CAAC,CAAC,CAAC;MAC5CD,QAAQ,CAAC,EAAE,CAAC;MACZE,cAAc,CAAC,EAAE,CAAC;IACpB;EACF,CAAC;EAED,oBACEN,OAAA;IAAMY,QAAQ,EAAEJ,YAAa;IAACK,SAAS,EAAC,0BAA0B;IAAAC,QAAA,gBAChEd,OAAA;MACEe,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEb,KAAM;MACbc,QAAQ,EAAGR,CAAC,IAAKL,QAAQ,CAACK,CAAC,CAACS,MAAM,CAACF,KAAK,CAAE;MAC1CG,WAAW,EAAC,YAAY;MACxBN,SAAS,EAAC;IAA0B;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC,eACFvB,OAAA;MACEgB,KAAK,EAAEX,WAAY;MACnBY,QAAQ,EAAGR,CAAC,IAAKH,cAAc,CAACG,CAAC,CAACS,MAAM,CAACF,KAAK,CAAE;MAChDG,WAAW,EAAC,kBAAkB;MAC9BN,SAAS,EAAC;IAA0B;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC,eACZvB,OAAA;MACEe,IAAI,EAAC,QAAQ;MACbF,SAAS,EAAC,4DAA4D;MAAAC,QAAA,EACvE;IAED;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEX,CAAC;AAACrB,EAAA,CArCID,QAAQ;EAAA,QAGKJ,WAAW;AAAA;AAAA2B,EAAA,GAHxBvB,QAAQ;AAuCd,eAAeA,QAAQ;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}