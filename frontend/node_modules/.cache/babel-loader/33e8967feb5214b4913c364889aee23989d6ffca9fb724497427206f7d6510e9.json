{"ast":null,"code":"// redux/store.js\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\nconst tasksSlice = createSlice({\n  name: 'tasks',\n  initialState: [],\n  reducers: {\n    setTasks: (state, action) => action.payload,\n    createTask: (state, action) => [...state, action.payload],\n    updateTask: (state, action) => {\n      return state.map(task => task.id === action.payload.id ? action.payload : task);\n    },\n    deleteTask: (state, action) => {\n      return state.filter(task => task.id !== action.payload);\n    }\n  }\n});\n\n// Thunk para `fetchTasks`\nexport const fetchTasks = () => async dispatch => {\n  try {\n    const response = await fetch('http://localhost:8080/api/v1/tasks');\n    const data = await response.json();\n    dispatch(tasksSlice.actions.setTasks(data));\n  } catch (error) {\n    console.error('Error fetching tasks:', error);\n  }\n};\nexport const {\n  setTasks,\n  createTask,\n  updateTask,\n  deleteTask\n} = tasksSlice.actions;\nconst store = configureStore({\n  reducer: {\n    tasks: tasksSlice.reducer\n  }\n});\nexport default store;","map":{"version":3,"names":["createSlice","configureStore","tasksSlice","name","initialState","reducers","setTasks","state","action","payload","createTask","updateTask","map","task","id","deleteTask","filter","fetchTasks","dispatch","response","fetch","data","json","actions","error","console","store","reducer","tasks"],"sources":["C:/todolist/todo-app/frontend/src/redux/store.js"],"sourcesContent":["// redux/store.js\r\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\r\n\r\nconst tasksSlice = createSlice({\r\n  name: 'tasks',\r\n  initialState: [],\r\n  reducers: {\r\n    setTasks: (state, action) => action.payload,\r\n    createTask: (state, action) => [...state, action.payload],\r\n    updateTask: (state, action) => {\r\n      return state.map(task =>\r\n        task.id === action.payload.id ? action.payload : task\r\n      );\r\n    },\r\n    deleteTask: (state, action) => {\r\n      return state.filter(task => task.id !== action.payload);\r\n    },\r\n  },\r\n});\r\n\r\n// Thunk para `fetchTasks`\r\nexport const fetchTasks = () => async dispatch => {\r\n  try {\r\n    const response = await fetch('http://localhost:8080/api/v1/tasks');\r\n    const data = await response.json();\r\n    dispatch(tasksSlice.actions.setTasks(data));\r\n  } catch (error) {\r\n    console.error('Error fetching tasks:', error);\r\n  }\r\n};\r\n\r\nexport const { setTasks, createTask, updateTask, deleteTask } = tasksSlice.actions;\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    tasks: tasksSlice.reducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n"],"mappings":"AAAA;AACA,SAASA,WAAW,EAAEC,cAAc,QAAQ,kBAAkB;AAE9D,MAAMC,UAAU,GAAGF,WAAW,CAAC;EAC7BG,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE,EAAE;EAChBC,QAAQ,EAAE;IACRC,QAAQ,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAKA,MAAM,CAACC,OAAO;IAC3CC,UAAU,EAAEA,CAACH,KAAK,EAAEC,MAAM,KAAK,CAAC,GAAGD,KAAK,EAAEC,MAAM,CAACC,OAAO,CAAC;IACzDE,UAAU,EAAEA,CAACJ,KAAK,EAAEC,MAAM,KAAK;MAC7B,OAAOD,KAAK,CAACK,GAAG,CAACC,IAAI,IACnBA,IAAI,CAACC,EAAE,KAAKN,MAAM,CAACC,OAAO,CAACK,EAAE,GAAGN,MAAM,CAACC,OAAO,GAAGI,IACnD,CAAC;IACH,CAAC;IACDE,UAAU,EAAEA,CAACR,KAAK,EAAEC,MAAM,KAAK;MAC7B,OAAOD,KAAK,CAACS,MAAM,CAACH,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKN,MAAM,CAACC,OAAO,CAAC;IACzD;EACF;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMQ,UAAU,GAAGA,CAAA,KAAM,MAAMC,QAAQ,IAAI;EAChD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,CAAC;IAClE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClCJ,QAAQ,CAAChB,UAAU,CAACqB,OAAO,CAACjB,QAAQ,CAACe,IAAI,CAAC,CAAC;EAC7C,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;EAC/C;AACF,CAAC;AAED,OAAO,MAAM;EAAElB,QAAQ;EAAEI,UAAU;EAAEC,UAAU;EAAEI;AAAW,CAAC,GAAGb,UAAU,CAACqB,OAAO;AAElF,MAAMG,KAAK,GAAGzB,cAAc,CAAC;EAC3B0B,OAAO,EAAE;IACPC,KAAK,EAAE1B,UAAU,CAACyB;EACpB;AACF,CAAC,CAAC;AAEF,eAAeD,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}